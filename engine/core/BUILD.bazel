load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "gl_core",
    srcs = ["gl_core.cc"],
    hdrs = ["gl_core.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/glad",
        "//util:macros",
        "//util/report",
        "@glfw",
    ],
)

cc_library(
    name = "frame_util",
    srcs = ["frame_util.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":types",
        "//util:macros",
        "//util/report",
        "//util/time",
        "//util/time:downsampler",
        "//third_party/imgui:imgui",
    ],
)

cc_library(
    name = "input",
    srcs = ["input.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":types",
        "//third_party/glad",
        "//util:macros",
        "@glfw",
    ],
)

cc_library(
    name = "gl_window",
    srcs = ["gl_window.cc"],
    hdrs = ["gl_window.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":frame_util",
        ":types",
        "//engine/core:gl_core",
        "//engine/core:input",
        "//third_party/glad",
        "//util:macros",
        "//util/report",
        "//util/time:downsampler",
        "@glfw",
    ],
)

cc_library(
    name = "types",
    hdrs = ["types.h"],
    visibility = ["//visibility:public"],
    deps = [
        "@glm",
    ],
)

cc_library(
    name = "core",
    srcs = [
        "gl_core.cc",
        "gl_window.cc",
    ],
    hdrs = [
        "frame_util.h",
        "gl_core.h",
        "gl_window.h",
        "input.h",
        "types.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":gl_core",
        ":gl_window",
        ":types",
        "//third_party/glad",
        "//util:macros",
        "//util/report",
        "//util/time",
        "//util/time:downsampler",
        "@glm",
    ],
)
